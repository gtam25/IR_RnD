
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'LBRACE':([6,19,23,26,27,30,46,50,57,68,69,71,72,74,75,76,89,95,96,98,99,119,121,122,133,136,140,185,186,201,205,211,212,213,216,217,218,220,224,226,230,232,246,292,301,332,334,338,342,343,344,351,352,353,356,359,398,413,414,429,430,434,435,439,440,445,453,454,455,461,471,472,475,476,478,479,494,496,497,501,508,514,515,517,519,520,521,],[-52,-29,-135,-304,74,-136,-68,74,-53,-82,74,-7,-8,-302,74,74,-304,-81,-69,74,74,74,74,-83,-30,74,74,-35,-36,-304,-78,-75,74,-76,-74,-77,-194,-193,-73,-72,-195,74,-303,-31,-34,-11,74,-12,-212,-210,-213,74,-209,74,-197,-196,74,-32,-33,-304,-177,-211,74,-200,-198,-208,74,74,-304,74,-11,74,-199,74,74,74,-204,-201,-203,-304,74,-205,-202,74,74,-207,-206,]),'FLOAT_CONST':([18,31,46,51,55,74,95,96,101,103,104,105,106,107,119,121,138,140,147,155,163,164,167,168,170,174,179,180,181,182,183,184,198,201,202,205,206,209,211,212,213,216,217,218,220,224,226,230,232,238,246,250,251,252,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,303,310,317,326,329,332,334,338,340,342,343,344,347,350,351,352,353,354,355,356,357,359,363,367,368,369,398,416,420,421,422,429,430,434,435,439,440,443,445,452,455,458,461,466,467,468,471,472,475,476,477,478,479,480,494,496,497,499,501,504,508,509,514,515,517,519,520,521,],[-115,-116,-68,-117,-304,-302,-81,-69,-27,-161,-28,157,-304,-28,157,157,-304,157,-162,157,157,157,-263,-261,-265,157,-260,-264,157,-262,157,157,157,-304,-261,-78,157,157,-75,157,-76,-74,-77,-194,-193,-73,-72,-195,157,157,-303,157,-304,-28,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-220,-223,-222,-225,-219,-221,157,-229,-228,-224,-227,-226,157,157,157,157,157,157,-304,-261,-11,157,-12,157,-212,-210,-213,157,157,157,-209,157,157,157,-197,157,-196,157,-261,157,157,157,-261,157,-304,-28,-304,-177,-211,157,-200,-198,157,-208,157,-304,157,157,-261,157,157,-11,157,-199,157,157,157,157,157,-204,-201,-203,157,-304,157,157,157,-205,-202,157,157,-207,-206,]),'RETURN':([46,74,95,96,121,205,211,212,213,216,217,218,220,224,226,230,232,246,342,343,344,351,352,353,356,359,434,435,439,440,445,475,476,478,479,494,496,497,508,514,515,517,519,520,521,],[-68,-302,-81,-69,206,-78,-75,206,-76,-74,-77,-194,-193,-73,-72,-195,206,-303,-212,-210,-213,206,-209,206,-197,-196,-211,206,-200,-198,-208,-199,206,206,206,-204,-201,-203,206,-205,-202,206,206,-207,-206,]),'INT':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,28,31,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,51,52,56,57,58,59,60,61,63,68,70,72,73,74,75,76,77,79,84,86,87,89,90,95,96,97,98,99,103,112,115,120,121,122,124,125,126,127,128,129,130,131,132,133,139,147,164,185,186,195,199,205,211,213,216,217,218,220,224,226,230,232,233,234,235,239,241,244,245,246,248,258,292,294,297,299,301,308,310,318,327,342,343,344,352,355,356,359,360,361,365,372,373,399,413,414,434,439,440,445,475,494,496,497,514,515,520,521,],[3,-65,-62,-103,-96,-113,-52,-216,-66,-91,-63,-60,-304,-112,-304,-97,-102,-115,-29,-109,-64,3,-105,-95,3,-94,-116,3,-100,-107,3,-93,-101,-108,-67,-104,-98,-114,-110,-68,-304,-99,-111,-117,-106,3,-53,-9,-85,-10,-86,-92,-82,3,3,3,-302,-130,-131,3,-61,-87,-88,-89,3,-90,-81,-69,-84,-147,-148,-161,3,3,-70,3,-83,3,3,-141,-137,-128,3,-140,3,3,-30,3,-162,3,-35,-36,3,3,-78,-75,-76,-74,-77,-194,-193,-73,-72,-195,3,3,3,-129,-126,-127,-138,-132,-303,-71,-149,-31,3,3,3,-34,3,3,3,3,-212,-210,-213,-209,3,-197,-196,-133,-134,-139,-150,-151,3,-32,-33,-211,-200,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'_COMPLEX':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,28,31,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,51,52,56,57,58,59,60,61,63,68,70,72,73,74,75,76,77,79,84,86,87,89,90,95,96,97,98,99,103,112,115,120,121,122,124,125,126,127,128,129,130,131,132,133,139,147,164,185,186,195,199,205,211,213,216,217,218,220,224,226,230,232,233,234,235,239,241,244,245,246,248,258,292,294,297,299,301,308,310,318,327,342,343,344,352,355,356,359,360,361,365,372,373,399,413,414,434,439,440,445,475,494,496,497,514,515,520,521,],[35,-65,-62,-103,-96,-113,-52,-216,-66,-91,-63,-60,-304,-112,-304,-97,-102,-115,-29,-109,-64,35,-105,-95,35,-94,-116,35,-100,-107,35,-93,-101,-108,-67,-104,-98,-114,-110,-68,-304,-99,-111,-117,-106,35,-53,-9,-85,-10,-86,-92,-82,35,35,35,-302,-130,-131,35,-61,-87,-88,-89,35,-90,-81,-69,-84,-147,-148,-161,35,35,-70,35,-83,35,35,-141,-137,-128,35,-140,35,35,-30,35,-162,35,-35,-36,35,35,-78,-75,-76,-74,-77,-194,-193,-73,-72,-195,35,35,35,-129,-126,-127,-138,-132,-303,-71,-149,-31,35,35,35,-34,35,35,35,35,-212,-210,-213,-209,35,-197,-196,-133,-134,-139,-150,-151,35,-32,-33,-211,-200,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'WSTRING_LITERAL':([18,31,46,51,55,74,95,96,101,103,104,105,106,107,119,121,138,140,147,149,155,156,163,164,167,168,170,174,179,180,181,182,183,184,198,201,202,205,206,209,211,212,213,216,217,218,220,224,226,230,232,238,246,250,251,252,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,295,297,302,303,310,317,326,329,332,334,338,340,342,343,344,347,350,351,352,353,354,355,356,357,359,363,367,368,369,398,416,420,421,422,429,430,434,435,439,440,443,445,452,455,458,461,466,467,468,471,472,475,476,477,478,479,480,494,496,497,499,501,504,508,509,514,515,517,519,520,521,],[-115,-116,-68,-117,-304,-302,-81,-69,-27,-161,-28,149,-304,-28,149,149,-304,149,-162,-300,149,295,149,149,-263,-261,-265,149,-260,-264,149,-262,149,149,149,-304,-261,-78,149,149,-75,149,-76,-74,-77,-194,-193,-73,-72,-195,149,149,-303,149,-304,-28,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,-220,-223,-222,-225,-219,-221,149,-229,-228,-224,-227,-226,149,-301,149,149,149,149,149,-304,-261,-11,149,-12,149,-212,-210,-213,149,149,149,-209,149,149,149,-197,149,-196,149,-261,149,149,149,-261,149,-304,-28,-304,-177,-211,149,-200,-198,149,-208,149,-304,149,149,-261,149,149,-11,149,-199,149,149,149,149,149,-204,-201,-203,149,-304,149,149,149,-205,-202,149,149,-207,-206,]),'ID':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,55,56,58,59,60,61,63,70,73,74,75,76,79,84,85,86,87,90,91,95,96,97,98,99,100,101,102,103,104,105,106,107,115,118,119,120,121,128,131,135,138,139,140,141,142,146,147,155,163,164,167,168,170,174,179,180,181,182,183,184,187,191,195,198,201,202,205,206,209,211,212,213,216,217,218,220,224,226,230,231,232,235,238,239,241,245,246,248,250,251,252,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,303,304,305,310,317,321,326,327,329,332,334,337,338,340,342,343,344,347,350,351,352,353,354,355,356,357,359,360,361,363,364,367,368,369,372,373,398,416,420,421,422,429,430,434,435,439,440,443,445,452,455,458,460,461,466,467,468,471,472,475,476,477,478,479,480,494,496,497,499,501,503,504,508,509,514,515,517,519,520,521,],[19,-65,-62,-103,-96,-113,-216,-66,-91,19,-63,-60,-304,-112,-304,-97,-102,-115,-109,-64,19,-135,-105,-95,75,-94,-136,-116,19,19,-100,-107,19,-93,-101,-108,-67,-104,-98,-114,-110,-68,-304,-99,-111,98,-117,-106,-304,-304,110,-9,-85,-10,-86,-92,19,19,-302,-130,-131,-61,-87,19,-88,-89,-90,19,-81,-69,-84,-147,-148,144,-27,-159,-161,-28,110,-304,-28,19,19,110,-70,222,-128,19,19,-304,110,110,144,144,-160,-162,110,110,110,-263,-261,-265,110,-260,-264,110,-262,110,110,110,19,19,110,-304,-261,-78,110,110,-75,222,-76,-74,-77,-194,-193,-73,-72,-195,358,222,-129,110,-126,-127,-132,-303,-71,110,-304,-28,-149,144,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-220,-223,-222,-225,-219,-221,110,-229,-228,-224,-227,-226,110,110,110,110,407,409,110,110,19,-304,110,-261,-11,110,110,-12,110,-212,-210,-213,110,110,222,-209,222,110,110,-197,110,-196,-133,-134,110,19,-261,110,110,-150,-151,110,-261,110,-304,-28,-304,-177,-211,222,-200,-198,110,-208,110,-304,110,110,110,-261,110,110,-11,110,-199,222,110,222,222,110,-204,-201,-203,110,-304,110,110,222,110,-205,-202,222,222,-207,-206,]),'TYPEID':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,63,68,70,72,73,74,75,76,77,79,84,85,86,87,89,90,91,95,96,97,98,99,101,102,103,104,112,115,118,120,121,122,124,125,126,127,128,129,130,131,132,133,135,139,146,147,164,185,186,191,195,199,205,211,213,216,217,218,220,224,226,230,232,233,234,235,239,241,244,245,246,248,258,292,294,297,301,304,305,308,310,318,327,342,343,344,352,355,356,359,360,361,364,365,372,373,399,413,414,434,439,440,445,475,494,496,497,514,515,520,521,],[7,-65,-62,-103,-96,-113,-52,-216,-66,-91,-63,-60,-304,-112,-304,-97,-102,-115,-29,-109,-64,7,-135,-105,-95,7,76,-94,-136,-116,7,-100,-107,83,-93,-101,-108,-67,-104,-98,-114,-110,-68,-304,-99,-111,99,-117,-106,-304,7,-53,-9,-85,-10,-86,-92,-82,7,7,83,-302,-130,-131,7,-61,-87,83,-88,-89,7,-90,83,-81,-69,-84,-147,-148,-27,-159,-161,-28,7,189,83,-70,7,-83,7,7,-141,-137,-128,7,-140,83,7,-30,83,7,-160,-162,7,-35,-36,189,7,7,-78,-75,-76,-74,-77,-194,-193,-73,-72,-195,7,7,7,-129,-126,-127,-138,-132,-303,-71,-149,-31,7,7,-34,408,410,7,7,7,7,-212,-210,-213,-209,7,-197,-196,-133,-134,83,-139,-150,-151,7,-32,-33,-211,-200,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'CASE':([46,74,95,96,121,205,211,212,213,216,217,218,220,224,226,230,232,246,342,343,344,351,352,353,356,359,434,435,439,440,445,475,476,478,479,494,496,497,508,514,515,517,519,520,521,],[-68,-302,-81,-69,209,-78,-75,209,-76,-74,-77,-194,-193,-73,-72,-195,209,-303,-212,-210,-213,209,-209,209,-197,-196,-211,209,-200,-198,-208,-199,209,209,209,-204,-201,-203,209,-205,-202,209,209,-207,-206,]),'WHILE':([46,74,95,96,121,205,211,212,213,216,217,218,220,224,226,230,232,246,342,343,344,348,351,352,353,356,359,434,435,439,440,445,475,476,478,479,494,496,497,508,514,515,517,519,520,521,],[-68,-302,-81,-69,210,-78,-75,210,-76,-74,-77,-194,-193,-73,-72,-195,210,-303,-212,-210,-213,437,210,-209,210,-197,-196,-211,210,-200,-198,-208,-199,210,210,210,-204,-201,-203,210,-205,-202,210,210,-207,-206,]),'CONTINUE':([46,74,95,96,121,205,211,212,213,216,217,218,220,224,226,230,232,246,342,343,344,351,352,353,356,359,434,435,439,440,445,475,476,478,479,494,496,497,508,514,515,517,519,520,521,],[-68,-302,-81,-69,207,-78,-75,207,-76,-74,-77,-194,-193,-73,-72,-195,207,-303,-212,-210,-213,207,-209,207,-197,-196,-211,207,-200,-198,-208,-199,207,207,207,-204,-201,-203,207,-205,-202,207,207,-207,-206,]),'LE':([110,148,149,150,151,153,154,156,157,158,159,160,161,165,166,169,172,176,177,178,222,246,293,295,296,306,307,309,311,312,313,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,402,404,407,408,409,410,453,456,457,459,500,502,511,],[-289,271,-300,-279,-252,-297,-266,-281,-294,-290,-295,-296,-291,-292,-233,-278,-254,-280,-293,-298,-289,-303,-258,-301,-255,-275,-274,-252,-257,-299,-256,-244,-240,271,-243,-241,-238,271,271,-239,271,-242,271,271,-234,-236,271,-235,-237,-282,-269,-272,-273,-270,-271,-259,-253,-267,-268,-276,-283,-277,]),'LONG':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,28,31,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,51,52,56,57,58,59,60,61,63,68,70,72,73,74,75,76,77,79,84,86,87,89,90,95,96,97,98,99,103,112,115,120,121,122,124,125,126,127,128,129,130,131,132,133,139,147,164,185,186,195,199,205,211,213,216,217,218,220,224,226,230,232,233,234,235,239,241,244,245,246,248,258,292,294,297,299,301,308,310,318,327,342,343,344,352,355,356,359,360,361,365,372,373,399,413,414,434,439,440,445,475,494,496,497,514,515,520,521,],[41,-65,-62,-103,-96,-113,-52,-216,-66,-91,-63,-60,-304,-112,-304,-97,-102,-115,-29,-109,-64,41,-105,-95,41,-94,-116,41,-100,-107,41,-93,-101,-108,-67,-104,-98,-114,-110,-68,-304,-99,-111,-117,-106,41,-53,-9,-85,-10,-86,-92,-82,41,41,41,-302,-130,-131,41,-61,-87,-88,-89,41,-90,-81,-69,-84,-147,-148,-161,41,41,-70,41,-83,41,41,-141,-137,-128,41,-140,41,41,-30,41,-162,41,-35,-36,41,41,-78,-75,-76,-74,-77,-194,-193,-73,-72,-195,41,41,41,-129,-126,-127,-138,-132,-303,-71,-149,-31,41,41,41,-34,41,41,41,41,-212,-210,-213,-209,41,-197,-196,-133,-134,-139,-150,-151,41,-32,-33,-211,-200,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'DO':([46,74,95,96,121,205,211,212,213,216,217,218,220,224,226,230,232,246,342,343,344,351,352,353,356,359,434,435,439,440,445,475,476,478,479,494,496,497,508,514,515,517,519,520,521,],[-68,-302,-81,-69,212,-78,-75,212,-76,-74,-77,-194,-193,-73,-72,-195,212,-303,-212,-210,-213,212,-209,212,-197,-196,-211,212,-200,-198,-208,-199,212,212,212,-204,-201,-203,212,-205,-202,212,212,-207,-206,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,28,31,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,51,52,56,57,58,59,60,61,63,68,70,72,73,74,75,76,77,79,84,86,87,89,90,95,96,97,98,99,103,112,115,120,121,122,124,125,126,127,128,129,130,131,132,133,139,147,164,185,186,195,199,205,211,213,216,217,218,220,224,226,230,232,233,234,235,239,241,244,245,246,248,258,292,294,297,299,301,308,310,318,327,342,343,344,352,355,356,359,360,361,365,372,373,399,413,414,434,439,440,445,475,494,496,497,514,515,520,521,],[52,-65,-62,-103,-96,-113,-52,-216,-66,-91,-63,-60,-304,-112,-304,-97,-102,-115,-29,-109,-64,52,-105,-95,52,-94,-116,52,-100,-107,52,-93,-101,-108,-67,-104,-98,-114,-110,-68,-304,-99,-111,-117,-106,52,-53,-9,-85,-10,-86,-92,-82,52,52,52,-302,-130,-131,52,-61,-87,-88,-89,52,-90,-81,-69,-84,-147,-148,-161,52,52,-70,52,-83,52,52,-141,-137,-128,52,-140,52,52,-30,52,-162,52,-35,-36,52,52,-78,-75,-76,-74,-77,-194,-193,-73,-72,-195,52,52,52,-129,-126,-127,-138,-132,-303,-71,-149,-31,52,52,52,-34,52,52,52,52,-212,-210,-213,-209,52,-197,-196,-133,-134,-139,-150,-151,52,-32,-33,-211,-200,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'CONST':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,24,25,26,28,31,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,51,52,53,55,56,57,63,68,72,73,74,75,76,77,79,84,86,87,89,90,95,96,98,99,103,104,106,107,115,120,121,122,124,125,126,127,128,129,130,131,132,133,138,139,147,164,185,186,195,199,205,211,213,216,217,218,220,224,226,230,232,233,234,235,239,241,244,245,246,248,251,252,258,292,294,297,299,301,308,310,318,326,327,342,343,344,352,355,356,359,360,361,365,372,373,399,413,414,421,422,434,439,440,445,475,494,496,497,514,515,520,521,],[18,-65,-62,-103,-96,-113,-52,-216,-66,-91,-63,-60,18,-112,18,-97,-102,-115,-29,-109,-64,-105,-95,18,-94,-116,18,-100,-107,18,-93,-101,-108,-67,-104,-98,-114,-110,-68,18,-99,-111,-117,-106,18,18,18,-53,-92,-82,18,18,-302,-130,-131,18,-61,-87,-88,-89,18,-90,-81,-69,-147,-148,-161,18,18,18,18,-70,18,-83,18,18,-141,-137,-128,18,-140,18,18,-30,18,18,-162,18,-35,-36,18,18,-78,-75,-76,-74,-77,-194,-193,-73,-72,-195,18,18,18,-129,-126,-127,-138,-132,-303,-71,18,18,-149,-31,18,18,18,-34,18,18,18,18,18,-212,-210,-213,-209,18,-197,-196,-133,-134,-139,-150,-151,18,-32,-33,18,18,-211,-200,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'COMMA':([3,4,5,6,7,9,14,16,17,18,19,20,24,25,28,31,34,35,37,38,39,41,42,44,45,48,49,51,52,53,57,63,64,66,67,75,76,81,83,84,86,87,88,89,90,92,93,94,98,99,101,102,103,104,108,110,114,115,116,117,123,128,133,134,143,144,145,146,147,148,149,150,151,153,154,156,157,158,159,160,161,165,166,169,172,175,176,177,178,185,186,188,189,190,191,192,193,194,196,197,200,203,204,214,222,229,235,237,239,240,241,242,245,246,247,249,255,256,257,258,259,292,293,295,296,299,300,301,306,307,309,311,312,313,316,319,320,330,335,341,346,360,361,362,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,400,401,402,403,404,405,406,407,408,409,410,411,413,414,418,419,425,426,427,428,436,438,441,444,446,447,448,449,453,456,457,459,462,463,464,469,470,473,482,483,484,485,486,489,490,493,495,500,502,505,506,511,513,],[-103,-96,-113,-52,-216,-91,-112,-97,-102,-115,-29,-109,-105,-95,-94,-116,-100,-107,-93,-101,-108,-104,-98,-114,-110,-99,-111,-117,-106,-304,-53,-92,118,-124,-122,-130,-131,-118,-37,-87,-88,-89,135,-157,-90,-158,-54,-120,-147,-148,-27,-159,-161,-28,-165,-289,187,-304,-170,199,-157,-128,-30,-55,259,-155,-152,-160,-162,-231,-300,-279,-252,-297,-266,-281,-294,-290,-295,-296,-291,-292,-233,-278,-254,-217,-280,-293,-298,-35,-36,-1,-45,-185,-183,-169,-2,-167,-168,-56,-123,-172,-125,-214,-289,357,-129,-142,-126,-144,-127,364,-132,-303,-119,-38,-121,259,259,-149,-153,-31,-258,-301,-255,-304,357,-34,-275,-274,-252,-257,-299,-256,-171,-57,-184,-166,429,357,-230,-133,-134,-146,-43,-44,-150,-151,-154,-156,-244,-240,-246,-243,-241,-238,-251,-245,-239,-249,-242,-250,357,-247,-234,-236,-248,-235,-237,-218,-183,-182,-282,357,-269,-287,458,-272,-273,-270,-271,460,-32,-33,-192,-186,-188,-190,-173,-175,357,357,357,-215,-145,-143,-39,-42,-259,-253,-267,-268,-187,-189,-191,-50,-51,-174,-40,-41,-232,501,-288,-46,-49,-176,357,-276,-283,-47,-48,-277,357,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pppragma_directive':([0,33,77,121,124,125,132,212,232,233,234,351,353,435,476,478,479,508,517,519,],[1,1,126,205,126,126,126,205,205,126,126,205,205,205,205,205,205,205,205,205,]),'function_definition':([0,33,],[2,2,]),'direct_typeid_declarator':([36,73,85,91,118,131,135,364,],[93,93,134,93,93,93,93,93,]),'struct_or_union_specifier':([0,22,26,33,56,70,72,77,89,112,121,124,125,129,132,139,164,195,199,232,233,234,294,297,308,310,318,327,355,399,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'init_declarator_list_opt':([36,73,],[82,82,]),'direct_typeid_noparen_declarator':([115,191,],[197,319,]),'type_specifier':([0,22,26,33,56,70,72,77,89,112,121,124,125,129,132,139,164,195,199,232,233,234,294,297,308,310,318,327,355,399,],[9,63,9,9,9,63,9,128,9,63,9,128,128,235,128,9,128,9,9,9,128,128,128,128,128,128,9,9,9,9,]),'designator_list':([201,429,455,501,],[336,336,336,336,]),'assignment_expression_opt':([105,198,250,317,420,],[152,328,366,415,465,]),'selection_statement':([121,212,232,351,353,435,476,478,479,508,517,519,],[211,211,211,211,211,211,211,211,211,211,211,211,]),'function_specifier':([0,13,15,26,33,36,47,56,72,73,89,115,121,139,195,199,232,318,327,355,399,],[15,15,15,15,15,87,15,15,15,87,15,87,15,15,15,15,15,15,15,15,15,]),'primary_expression':([105,119,121,140,155,163,164,174,181,183,184,198,206,209,212,232,238,250,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,294,297,302,303,310,317,334,340,347,350,351,353,354,355,357,363,368,369,398,420,435,443,452,458,461,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'parameter_declaration':([56,139,195,199,318,327,399,],[108,108,108,330,108,108,108,]),'parameter_type_list':([56,139,195,318,327,399,],[109,253,322,322,423,322,]),'unified_wstring_literal':([105,119,121,140,155,163,164,174,181,183,184,198,206,209,212,232,238,250,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,294,297,302,303,310,317,334,340,347,350,351,353,354,355,357,363,368,369,398,420,435,443,452,458,461,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'id_init_declarator_list':([22,70,],[64,64,]),'constant_expression':([209,238,260,340,363,],[345,362,375,433,446,]),'declaration_specifiers_no_type':([0,13,15,26,33,47,56,72,89,121,139,195,199,232,318,327,355,399,],[22,60,60,70,22,60,112,70,70,70,112,112,112,70,112,112,70,112,]),'typeid_declarator':([36,73,91,118,131,135,364,],[92,92,137,92,92,92,92,]),'abstract_declarator':([115,195,299,399,],[193,324,193,324,]),'struct_or_union':([0,22,26,33,56,70,72,77,89,112,121,124,125,129,132,139,164,195,199,232,233,234,294,297,308,310,318,327,355,399,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'type_name':([164,294,297,308,310,],[298,396,397,411,412,]),'designator':([201,336,429,455,501,],[339,431,339,339,339,]),'statement':([121,212,232,351,353,435,476,478,479,508,517,519,],[218,348,218,439,440,475,494,496,497,515,520,521,]),'expression_opt':([121,212,232,351,353,355,435,443,476,478,479,480,499,508,509,517,519,],[208,208,208,208,208,442,208,481,208,208,208,498,510,208,516,208,208,]),'brace_close':([132,143,228,233,234,256,257,333,429,485,501,],[245,258,356,360,361,372,373,427,473,500,511,]),'enumerator_list':([100,141,142,],[143,256,257,]),'typeid_noparen_declarator':([115,],[196,]),'enumerator':([100,141,142,259,],[145,145,145,374,]),'declaration_specifiers':([0,26,33,56,72,89,121,139,195,199,232,318,327,355,399,],[36,73,36,115,73,73,73,115,115,115,73,115,115,73,115,]),'assignment_expression':([105,119,121,140,164,183,184,198,206,212,232,250,273,286,294,297,302,303,310,317,334,347,350,351,353,354,355,357,368,369,420,435,443,458,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[171,203,214,203,214,314,315,171,214,214,214,171,214,395,214,214,214,405,214,171,203,214,214,214,214,214,214,444,450,451,171,214,214,486,491,492,203,214,214,214,214,214,214,214,214,214,214,214,]),'iteration_statement':([121,212,232,351,353,435,476,478,479,508,517,519,],[213,213,213,213,213,213,213,213,213,213,213,213,]),'direct_abstract_declarator':([115,191,195,299,321,399,400,],[190,320,190,190,320,190,320,]),'argument_expression_list':([303,],[406,]),'identifier':([56,105,119,121,139,140,155,163,164,174,181,183,184,187,198,206,209,212,232,238,250,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,294,297,302,303,310,317,327,334,337,340,347,350,351,353,354,355,357,363,368,369,398,420,435,443,452,458,460,461,467,468,472,476,477,478,479,480,499,503,504,508,509,517,519,],[116,169,169,169,116,169,169,169,169,169,169,169,169,316,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,116,169,432,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,488,169,169,169,169,169,169,169,169,169,169,512,169,169,169,169,169,]),'initializer':([119,140,334,472,],[204,255,428,493,]),'jump_statement':([121,212,232,351,353,435,476,478,479,508,517,519,],[217,217,217,217,217,217,217,217,217,217,217,217,]),'parameter_list':([56,139,195,318,327,399,],[117,117,117,117,117,117,]),'type_qualifier':([0,13,15,26,33,36,47,53,55,56,72,73,77,89,104,106,107,115,121,124,125,129,131,132,138,139,164,195,199,232,233,234,251,252,294,297,299,308,310,318,326,327,355,399,421,422,],[47,47,47,47,47,84,47,103,103,47,47,84,103,47,147,103,147,84,47,103,103,147,241,103,103,47,103,47,47,47,103,103,103,147,103,103,241,103,103,47,103,47,47,47,103,147,]),'typedef_name':([0,22,26,33,56,70,72,77,89,112,121,124,125,129,132,139,164,195,199,232,233,234,294,297,308,310,318,327,355,399,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'specifier_qualifier_list':([77,124,125,132,164,233,234,294,297,308,310,],[131,131,131,131,299,131,131,299,299,299,299,]),'compound_statement':([69,121,136,212,232,351,353,435,476,478,479,508,517,519,],[120,216,248,216,216,216,216,216,216,216,216,216,216,216,]),'postfix_expression':([105,119,121,140,155,163,164,174,181,183,184,198,206,209,212,232,238,250,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,294,297,302,303,310,317,334,340,347,350,351,353,354,355,357,363,368,369,398,420,435,443,452,458,461,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'unary_expression':([105,119,121,140,155,163,164,174,181,183,184,198,206,209,212,232,238,250,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,294,297,302,303,310,317,334,340,347,350,351,353,354,355,357,363,368,369,398,420,435,443,452,458,461,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[151,151,151,151,293,296,151,309,313,151,151,151,151,309,151,151,309,151,309,309,309,309,309,309,309,309,309,309,309,309,309,151,309,309,309,309,309,309,151,151,151,151,151,151,151,151,309,151,151,151,151,151,151,151,309,151,151,309,151,151,151,309,151,309,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'translation_unit_or_empty':([0,],[54,]),'binary_expression':([105,119,121,140,164,183,184,198,206,209,212,232,238,250,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,294,297,302,303,310,317,334,340,347,350,351,353,354,355,357,363,368,369,420,435,443,452,458,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,376,377,378,379,380,381,382,383,384,385,386,387,148,389,390,391,392,393,394,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'type_specifier_no_typeid':([0,22,26,33,36,56,70,72,73,77,89,112,115,121,124,125,129,131,132,139,164,195,199,232,233,234,294,297,299,308,310,318,327,355,399,],[44,44,44,44,90,44,44,44,90,44,44,44,90,44,44,44,44,239,44,44,44,44,44,44,44,44,44,44,239,44,44,44,44,44,44,]),'init_declarator':([36,73,118,135,],[81,81,200,247,]),'constant':([105,119,121,140,155,163,164,174,181,183,184,198,206,209,212,232,238,250,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,294,297,302,303,310,317,334,340,347,350,351,353,354,355,357,363,368,369,398,420,435,443,452,458,461,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'designation_opt':([201,429,455,501,],[334,472,334,472,]),'direct_id_declarator':([0,10,22,32,33,36,70,73,85,91,115,118,131,135,191,195,321,364,],[6,57,6,6,6,6,6,6,57,6,6,6,6,6,57,6,57,6,]),'brace_open':([27,50,69,75,76,98,99,119,121,136,140,212,232,334,351,353,398,435,453,454,461,472,476,478,479,508,517,519,],[77,100,121,124,125,141,142,201,121,121,201,121,121,201,121,121,455,121,455,455,455,201,121,121,121,121,121,121,]),'pointer':([0,22,32,33,36,70,73,91,102,115,118,131,135,195,299,364,399,],[10,10,10,10,85,10,85,85,146,191,85,85,85,321,400,85,400,]),'declaration':([0,26,33,72,89,121,232,355,],[11,68,11,122,68,220,220,443,]),'external_declaration':([0,33,],[12,79,]),'storage_class_specifier':([0,13,15,26,33,36,47,56,72,73,89,115,121,139,195,199,232,318,327,355,399,],[13,13,13,13,13,86,13,13,13,86,13,86,13,13,13,13,13,13,13,13,13,]),'abstract_declarator_opt':([115,299,],[192,401,]),'type_qualifier_list':([53,55,77,106,124,125,132,138,164,233,234,251,294,297,308,310,326,421,],[104,107,129,104,129,129,129,252,129,129,129,104,129,129,129,129,422,104,]),'declaration_list_opt':([26,89,],[69,136,]),'enum_specifier':([0,22,26,33,56,70,72,77,89,112,121,124,125,129,132,139,164,195,199,232,233,234,294,297,308,310,318,327,355,399,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'declaration_specifiers_no_type_opt':([13,15,47,],[59,61,97,]),'parameter_type_list_opt':([195,318,399,],[323,417,323,]),'struct_declarator_list_opt':([131,],[243,]),'identifier_list_opt':([56,139,327,],[111,254,424,]),'initializer_list':([201,455,],[335,485,]),'pp_directive':([0,33,],[21,21,]),'id_init_declarator_list_opt':([22,70,],[65,65,]),'designation':([201,429,455,501,],[338,338,338,338,]),'struct_declaration_list':([77,124,125,],[132,233,234,]),'init_declarator_list':([36,73,],[88,88,]),'id_declarator':([0,22,32,33,36,70,73,91,115,118,131,135,195,364,],[26,66,78,26,89,66,123,78,194,123,123,123,78,123,]),'identifier_list':([56,139,327,],[114,114,114,]),'empty':([0,13,15,22,26,36,47,53,55,56,70,73,89,105,106,115,121,131,138,139,195,198,201,212,232,250,251,299,317,318,326,327,351,353,355,399,420,421,429,435,443,455,476,478,479,480,499,501,508,509,517,519,],[29,58,58,62,71,80,58,101,101,113,62,80,71,162,101,188,227,236,101,113,325,162,332,349,349,162,101,188,162,325,101,113,349,349,349,325,162,101,471,349,349,471,349,349,349,349,349,471,349,349,349,349,]),'offsetof_member_designator':([460,],[487,]),'struct_declaration':([77,124,125,132,233,234,],[127,127,127,244,244,244,]),'expression':([121,164,206,212,232,273,294,297,302,310,347,350,351,353,354,355,435,443,476,477,478,479,480,499,504,508,509,517,519,],[229,300,341,229,229,388,300,300,403,300,436,438,229,229,441,229,229,229,229,495,229,229,229,229,513,229,229,229,229,]),'block_item_list_opt':([121,],[228,]),'cast_expression':([105,119,121,140,164,174,183,184,198,206,209,212,232,238,250,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,294,297,302,303,310,317,334,340,347,350,351,353,354,355,357,363,368,369,398,420,435,443,452,458,461,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[166,166,166,166,166,311,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,456,166,166,166,166,166,456,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'declaration_list':([26,89,],[72,72,]),'struct_declarator':([131,364,],[237,447,]),'id_init_declarator':([22,70,],[67,67,]),'translation_unit':([0,],[33,]),'decl_body':([0,26,33,72,89,121,232,355,],[43,43,43,43,43,43,43,43,]),'declarator':([36,73,118,131,135,364,],[94,94,94,240,94,240,]),'block_item':([121,232,],[230,359,]),'unary_operator':([105,119,121,140,155,163,164,174,181,183,184,198,206,209,212,232,238,250,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,294,297,302,303,310,317,334,340,347,350,351,353,354,355,357,363,368,369,398,420,435,443,452,458,461,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'conditional_expression':([105,119,121,140,164,183,184,198,206,209,212,232,238,250,260,273,286,294,297,302,303,310,317,334,340,347,350,351,353,354,355,357,363,368,369,420,435,443,452,458,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[175,175,175,175,175,175,175,175,175,346,175,175,346,175,346,175,175,175,175,175,175,175,175,175,346,175,175,175,175,175,175,175,346,175,175,175,175,175,484,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'unified_string_literal':([105,119,121,140,155,163,164,174,181,183,184,198,206,209,212,232,238,250,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,294,297,302,303,310,317,334,340,347,350,351,353,354,355,357,363,368,369,398,420,435,443,452,458,461,467,468,472,476,477,478,479,480,499,504,508,509,517,519,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'struct_declarator_list':([131,],[242,]),'initializer_list_opt':([201,],[333,]),'type_qualifier_list_opt':([53,55,106,138,251,326,421,],[102,105,183,250,368,420,467,]),'expression_statement':([121,212,232,351,353,435,476,478,479,508,517,519,],[224,224,224,224,224,224,224,224,224,224,224,224,]),'block_item_list':([121,],[232,]),'labeled_statement':([121,212,232,351,353,435,476,478,479,508,517,519,],[226,226,226,226,226,226,226,226,226,226,226,226,]),'assignment_operator':([151,],[286,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
